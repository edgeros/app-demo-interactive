const CLIENT_VERSION=[0,1,7],clients=new Set;function singleDiff(e,t,s){if(e[s]===t)return!1;let i=!1;return"object"==typeof t?null===t?null!==e[s]&&(i=!0):i=Array.isArray(t)?!Array.isArray(e[s])||isDifferent(e[s],t):!!Array.isArray(e[s])||isDifferent(e[s],t):i=!0,i}function isDifferent(e,t){if("object"!=typeof e||"object"!=typeof t)throw new TypeError("Arguments error");if(null==e&&null==t)return!1;if(null==e||null==t)return!0;let s=!1;if(Array.isArray(e)){if(!Array.isArray(t))return!0;try{t.forEach(function(t,i){if(s=singleDiff(e,t,i))throw new Error("Different")})}catch(e){if("Different"===e.message)return!0;throw e}}else{if(Array.isArray(t))return!0;for(let i in t)if(s=singleDiff(e,t[i],i))break}return s}class EventEmitter{constructor(){this._events={},this.on=this.addEventListener,this.off=this.removeEventListener}_emit(e){var t=this._events[e];if(!Array.isArray(t))return!1;t=t.slice();for(var s=Array.prototype.slice.call(arguments,1),i=0;i<t.length;++i)t[i].apply(this,s);return!0}addEventListener(e,t){if("function"!=typeof t)throw new TypeError("listener must be a function");return this._events[e]||(this._events[e]=[]),this._events[e].push(t),this}removeEventListener(e,t){if("function"!=typeof t)throw new TypeError("listener must be a function");var s=this._events[e];if(!Array.isArray(s))return this;for(var i=s.length-1;i>=0;--i)if(s[i]==t||s[i].listener&&s[i].listener==t){s.splice(i,1),s.length||delete this._events[e];break}return this}removeAllListeners(e){return 0===arguments.length?this._events={}:delete this._events[e],this}}const TIMEOUT_PERIOD=1e3,linkers=new Map;class Linker extends EventEmitter{constructor(e,t){if("string"!=typeof e||"object"!=typeof t)throw new TypeError("Arguments error");super(),this.ref=1,this.opt=t,this.url=this._url(e,t),this.period=t.ping,this.server=e,this.opened=!1,this.tables=new Map,this.socket=new WebSocket(this.url),this._init(),linkers.set(e,this)}_url(e,t){var s=e+"/eos/websynctable";return"string"==typeof t.token&&"string"==typeof t.srand?s+=`?edger-token=${t.token}&edger-srand=${t.srand}&version=${CLIENT_VERSION}`:s+=`?version=${CLIENT_VERSION}`,s}_init(){this.socket.onopen=(()=>{this.opened=!0,console.log("SyncTable Linker connected."),this._emit("connect"),null==this.ping&&(this.ping=setInterval(()=>{this.send({event:"noop"})},this.period))}),this.socket.onclose=(()=>{this.opened=!1,this.ref<=0||(console.log("SyncTable Linker disconnect."),this._emit("disconnect"),null!=this.ping&&(clearInterval(this.ping),this.ping=void 0),this._reconn=setTimeout(()=>{this.url=this._url(this.server,this.opt),this.socket=new WebSocket(this.url),this._init()},TIMEOUT_PERIOD))}),this.socket.onmessage=(e=>{try{var t=JSON.parse(e.data)}catch{return console.error("SyncTable Linker receive invalid message.")}var s=this.tables.get(t.name);s?s._onmessage(t):console.warn("SyncTable Linker received unregister table message.")})}close(){this.ref<=0||(this.ref--,this.ref<=0&&(null!=this.ping?(clearInterval(this.ping),this.ping=void 0):clearTimeout(this._reconn),this.removeAllListeners(),this.socket.close(),this.tables.clear(),linkers.delete(this.server)))}register(e,t){this.tables.set(e,t)}unregister(e){this.tables.delete(e),this.socket.readyState===WebSocket.OPEN&&this.send({name:e,event:"goodbye"})}send(e){return!!this.opened&&(this.socket.send(JSON.stringify(e)),!0)}get state(){return this.socket.readyState}}function toBase64(e){var t=new TextDecoder("utf8");return btoa(t.decode(e))}function fromBase64(e){return(new TextEncoder).encode(atob(e))}function getRandId(){var e=Date.now();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,t=>{var s=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"==t?s:3&s|8).toString(16)})}class SyncTable extends EventEmitter{constructor(e,t,s={}){if("string"!=typeof e||"string"!=typeof t)throw new TypeError("Arguments error");if(clients.has(t))throw new Error("Duplicate creation");"number"!=typeof s.ping&&(s.ping=2e3),"number"!=typeof s.timeout&&(s.timeout=6e3),super(),this._linker=linkers.get(e),this._linker?this._linker.ref++:this._linker=new Linker(e,s),this._linker.register(t,this),this._name=t,this._uuid=getRandId(),this._scnt=0,this._qsets=[],this._qgets=[],this._qhass=[],this._qcmds=[],this._qsync=[],this._cache=new Map,this._undef=new Set,this._alrdy=void 0,this._init(),this._timer=setInterval(()=>{this._totick(this._qsets,s.timeout),this._totick(this._qgets,s.timeout),this._totick(this._qhass,s.timeout),this._totick(this._qcmds,s.timeout)},TIMEOUT_PERIOD),clients.add(t)}_hello(){let e=void 0;this._qgets.length&&(e=[],this._qgets.forEach(t=>e.push(t.key))),this._qsync.length&&(e=e?e.concat(this._qsync):this._qsync);var t=!1;e&&(this._linker.send(this._bsync(e)),t=!0);for(let e=0;e<this._qsets.length;e++){let s=this._qsets[e];this._linker.send(s.msg),t=!0}for(let e=0;e<this._qhass.length;e++){let s=this._qhass[e];this._linker.send(s.msg),t=!0}for(let e=0;e<this._qcmds.length;e++){let s=this._qcmds[e];!s.sended&&s.msg&&(this._linker.send(s.msg),s.sended=!0,t=!0)}t||this._linker.send(this._bnoop()),this._emit("connect")}_init(){this._linker.on("connect",()=>{this._hello()}),this._linker.on("disconnect",()=>{this._qsync=[],this._alrdy?this._cache.forEach((e,t)=>this._alrdy.set(t,e)):this._alrdy=this._cache,this._alrdy.forEach((e,t)=>this._qsync.push(t)),this._cache=new Map,this._undef.clear(),this._emit("disconnect")}),this._linker.state===WebSocket.OPEN&&this._hello()}_totick(e,t){for(var s=0;s<e.length;s++){var i=e[s];i.timeout+=TIMEOUT_PERIOD,i.timeout>=t&&(i.reject(new Error("Timeout")),e.splice(s,1),s--)}}_onmessage(e){switch(e.event){case"clear":this._cache.clear(),this._emit("clear");break;case"update":if("base64"===e.encode)try{e.value=fromBase64(e.value)}catch{return console.error(`SyncTable: ${this._name} invalid base64.`)}null==e.value?(this._cache.delete(e.key),this._undef.add(e.key)):(this._cache.set(e.key,e.value),this._undef.delete(e.key));for(let t=0;t<this._qgets.length;t++){const s=this._qgets[t];s.key===e.key&&(s.resolve(e.value),this._qgets.splice(t,1),t--)}if(e.id)for(var t=0;t<this._qsets.length;t++){const s=this._qsets[t];s.key===e.key&&s.id===e.id&&(s.resolve(e.value),this._qsets.splice(t,1),t--)}var s=!0;if(this._alrdy){var i=this._alrdy.get(e.key);i===e.value?s=!1:"object"==typeof i&&"object"==typeof e.value&&(s=isDifferent(e.value,i)),void 0!==i&&(this._alrdy.delete(e.key),0===this._alrdy.size&&(this._alrdy=void 0))}s&&this._emit("update",e.key,e.value);break;case"has":for(let t=0;t<this._qhass.length;t++){var r=this._qhass[t];r.key===e.key&&(null==e.value?this._undef.add(e.key):this._undef.delete(e.key),r.resolve(e.value),this._qhass.splice(t,1),t--)}break;case"cmd":for(let t=0;t<this._qcmds.length;t++){const s=this._qcmds[t];s.key===e.key&&s.id===e.id&&(s.resolve(e.value),this._qcmds.splice(t,1),t--)}break;case"event":if("function"==typeof this.onmessage){if("base64"===e.encode)try{e.value=fromBase64(e.value)}catch{return console.error(`SyncTable: ${this._name} invalid base64.`)}this.onmessage(e.key,e.value)}break;case"error":if(null!=e.key)if(e.id)for(let t=0;t<this._qsets.length;t++){const s=this._qsets[t];s.key===e.key&&s.id===e.id&&(s.reject(new Error(e.info)),this._qsets.splice(t,1),t--)}else for(let t=0;t<this._qgets.length;t++){const s=this._qgets[t];s.key===e.key&&(s.reject(new Error(e.info)),this._qgets.splice(t,1),t--)}else console.error(`SyncTable: ${this._name} receive error: ${e.info}`),this._emit("error",new Error(e.info));break;default:console.warn(`SyncTable: ${this._name} receive unknown message: ${e.event}`)}}_genid(){var e=this._uuid+this._scnt;return this._scnt++,e}_bset(e,t,s){var i={name:this._name,event:"set",id:s,key:e};return t instanceof Uint8Array?(i.encode="base64",i.value=toBase64(t)):i.value=t,i}_bget(e){return{name:this._name,event:"get",key:e}}_bhas(e){return{name:this._name,event:"has",key:e}}_bsync(e){return{name:this._name,event:"sync",keys:e}}_bcmd(e,t,s){return{name:this._name,event:"cmd",id:s,key:e,value:t}}_bnoop(){return{name:this._name,event:"noop"}}close(){null!=this._cache&&(clients.delete(this._name),this.removeAllListeners(),this._linker.unregister(this._name),this._linker.close(),clearInterval(this._timer),delete this._timer,delete this._linker,delete this._name,delete this._cache,delete this._undef,this._totick(this._qsets,0),this._totick(this._qgets,0),this._totick(this._qhass,0),this._totick(this._qcmds,0))}async delete(e){return this.set(e,void 0)}async set(e,t){if("string"!=typeof e&&"number"!=typeof e)throw new TypeError("Arguments error");var s=this._bset(e,t,this._genid());return new Promise((t,i)=>{this._linker.opened&&this._linker.send(s),this._qsets.push({key:e,msg:s,id:s.id,timeout:0,resolve:t,reject:i})})}async get(e){if("string"!=typeof e&&"number"!=typeof e)throw new TypeError("Arguments error");return new Promise((t,s)=>{var i=this._cache.get(e);null!=i?t(i):this._undef.has(e)?t(i):(this._linker.opened&&this._linker.send(this._bget(e)),this._qgets.push({key:e,timeout:0,resolve:t,reject:s}))})}async has(e){if("string"!=typeof e&&"number"!=typeof e)throw new TypeError("Arguments error");var t=this._bhas(e);return new Promise((s,i)=>{var r=this._cache.has(e);r?s(r):this._undef.has(e)?s(!1):(this._linker.opened&&this._linker.send(t),this._qhass.push({key:e,msg:t,timeout:0,resolve:s,reject:i}))})}async fetch(e,t,s=!1){if("string"!=typeof e)throw new TypeError("Arguments error");var i=this._bcmd(e,t,this._genid());return new Promise((t,r)=>{this._linker.opened?(this._linker.send(i),this._qcmds.push({key:e,id:i.id,sended:!0,timeout:0,resolve:t,reject:r})):s?this._qcmds.push({key:e,msg:i,id:i.id,timeout:0,resolve:t,reject:r}):r(new Error("No connection"))})}get name(){return this._name}}SyncTable.Object={isDifferent:isDifferent},SyncTable.SyncTable=SyncTable,module.exports=SyncTable;